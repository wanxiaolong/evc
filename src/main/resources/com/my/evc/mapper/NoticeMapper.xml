<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.evc.mapper.NoticeMapper">

	<insert id="create" parameterType="com.my.evc.model.Notice" keyProperty="id" useGeneratedKeys="true">
		insert into notice
			(user_id,title,important_level,content)
		values
			(#{userId},#{title},#{importantLevel},#{content})
	</insert>
	
	<delete id="delete" parameterType="int">
		delete from notice where id=#{id}
	</delete>
	
	<update id="update" parameterType="com.my.evc.model.Notice">
		update notice 
		set 
			user_id=#{userId}, 
			title=#{title}, 
			important_level=#{importantLevel}, 
			content=#{content} 
		where 
			id=#{id}
	</update>
	
	<sql id="all_fields">
		n.id as id,
		n.user_id as userId, 
		n.title as title, 
		n.important_level as importantLevel,
		n.content as content,
		n.creation_date as creationDate
	</sql>
	
	<select id="find" parameterType="int" resultType="com.my.evc.model.Notice">
		select 
			<include refid="all_fields"/>, u.username as userName
		from notice n join user u on n.user_id=u.id
		where n.id=#{id}
	</select>
	
	<select id="findAll" resultType="com.my.evc.model.Notice">
		select
			<include refid="all_fields"/>, u.username as userName
		from notice n join user u on n.user_id=u.id
		order by n.creation_date desc 
		limit 100
	</select>
</mapper>