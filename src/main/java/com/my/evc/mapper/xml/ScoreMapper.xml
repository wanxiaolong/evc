<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.evc.mapper.ScoreMapper">

	<insert id="create" parameterType="com.my.evc.model.Score" keyProperty="id" useGeneratedKeys="true">
		insert into score
			(student_number,exam_id,chinese,math,english,physics,chemistry,
			biologic,politics,history,geography,physical,experiment,score1,score2) 
		values
			(#{studentNumber},#{examId},#{chinese},#{math},
			#{english},#{physics},#{chemistry},
			#{biologic},#{politics},#{history},#{geography},
			#{physical},#{experiment},#{score1},#{score2})
	</insert>
	
	<insert id="createBatch" parameterType="java.util.List">
		insert into score
			(student_number,exam_id,chinese,math,english,physics,chemistry,
			biologic,politics,history,geography,physical,experiment,score1,score2) 
		values
		<!-- 对于List类型的参数，这里的collection直接写list就好 -->
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.studentNumber},#{item.examId},#{item.chinese},#{item.math},
			#{item.english},#{item.physics},#{item.chemistry},
			#{item.biologic},#{item.politics},#{item.history},#{item.geography},
			#{item.physical},#{item.experiment},#{item.score1},#{item.score2})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="int">
		delete from score where id=#{id}
	</delete>
	
	<update id="update" parameterType="com.my.evc.model.Score">
		update score 
		set 
			student_number=#{studentNumber},
			exam_id=#{examId},
			chinese=#{chinese},
			math=#{math},
			english=#{english},
			physics=#{physics},
			chemistry=#{chemistry},
			biologic=#{biologic},
			politics=#{politics},
			history=#{history},
			geography=#{geography},
			physical=#{physical},
			experiment=#{experiment},
			score1=#{score1},
			score2=#{score2}
		where 
			id=#{id}
	</update>
	
	<sql id="all_fields">
		score.id as id,
		score.student_number as studentNumber,
		score.exam_id as examId,
		score.chinese as chinese,
		score.math as math,
		score.english as english,
		score.physics as physics,
		score.chemistry as chemistry,
		score.biologic as biologic,
		score.politics as politics,
		score.history as history,
		score.geography as geography,
		score.physical as physical,
		score.experiment as experiment,
		score.score1 as score1,
		score.score2 as score2,
		score.creation_date as creationDate
	</sql>
	
	<select id="find" parameterType="int" resultType="com.my.evc.model.Score">
		select
			<include refid="all_fields"/>
		from score where id=#{id}
	</select>
	
	<select id="findBySemester" parameterType="map" resultType="com.my.evc.vo.ScoreVo">
		select
			<include refid="all_fields"/>,
		student.name as studentName,
		exam.name as examName,
		exam.is_show_class_rank as isShowClassRank,
		exam.is_show_grade_rank as isShowGradeRank,
		semester.name as semesterName
		from score 
		join student 
		on student.number = score.student_number
		join exam 
		on score.exam_id = exam.id
		join semester
		on exam.semester_number = semester.number
		where student.name_pinyin=#{namePinYin} 
		and birth_day=#{birthday} 
		<if test="semesterId > 0">
			and semester_number = #{semesterId}
		</if>
	</select>
	
	<select id="findByClass" parameterType="int" resultType="com.my.evc.vo.ScoreVo">
		select
			<include refid="all_fields"/>,
		student.name as studentName
		from score join student 
		on student.number = score.student_number
		where exam_id=#{examId}
	</select>
</mapper>